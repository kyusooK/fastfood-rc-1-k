spring:
  config:
    activate:
      on-profile: default
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
  cloud:
    function:
      routing-expression: "headers['type'] == 'OrderPlaced' ? 'wheneverOrderPlaced_AcceptOrder' : headers['type'] == 'OrderCancelled' ? 'wheneverOrderCancelled_CancelCook' : 'discardFunction'"
    stream:
      kafka:
        binder:
          brokers: localhost:9092
      bindings:
        functionRouter-in-0:
          destination: fastfood
          group: store
          contentType: application/json
        producer-out-0:
          destination: fastfood
          contentType: application/json

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
  cloud:
    function:
      routing-expression: "headers['type'] == 'OrderPlaced' ? 'wheneverOrderPlaced_AcceptOrder' : headers['type'] == 'OrderCancelled' ? 'wheneverOrderCancelled_CancelCook' : 'discardFunction'"
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
      bindings:
        functionRouter-in-0:
          destination: fastfood
          group: store
          contentType: application/json
        producer-out-0:
          destination: fastfood
          contentType: application/json

---
# spring:
#   config:
#     activate:
#       on-profile: docker
#   datasource:
#     url: jdbc:h2:mem:testdb
#     driverClassName: org.h2.Driver
#     username: sa
#     password:
#   jpa:
#     database-platform: org.hibernate.dialect.H2Dialect
#     hibernate:
#       ddl-auto: update
#   cloud:
#     function:
#       routing-expression: "headers['type'] == 'OrderPlaced' ? 'wheneverOrderPlaced_AcceptOrder' : headers['type'] == 'OrderCancelled' ? 'wheneverOrderCancelled_CancelCook' : 'discardFunction'"
#     stream:
#       kafka:
#         binder:
#           brokers: localhost:9092
#       bindings:
#         functionRouter-in-0:
#           destination: fastfood
#           group: store
#           contentType: application/json
#         producer-out-0:
#           destination: fastfood
#           contentType: application/json